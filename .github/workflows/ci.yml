name: CI

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  unit-tests:
    name: "WP ${{ matrix.config.wp }}, multisite: ${{ matrix.config.ms }}, PHP: ${{ matrix.config.php }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { wp: latest,  ms: 'no',  php: '8.1', coverage: 'yes' }
          - { wp: latest,  ms: 'yes', php: '8.1', coverage: 'yes' }
          - { wp: latest,  ms: 'no',  php: '8.2' }
          - { wp: latest,  ms: 'yes', php: '8.2' }
          - { wp: latest,  ms: 'no',  php: '8.3' }
          - { wp: latest,  ms: 'yes', php: '8.3' }

          - { wp: nightly, ms: 'no',  php: '8.1' }
          - { wp: nightly, ms: 'yes', php: '8.1' }
          - { wp: nightly, ms: 'no',  php: '8.2' }
          - { wp: nightly, ms: 'yes', php: '8.2' }
          - { wp: nightly, ms: 'no',  php: '8.3' }
          - { wp: nightly, ms: 'yes', php: '8.3' }

    services:
      mysql:
        image: mariadb:latest
        ports:
          - "3306:3306"
        env:
          MYSQL_ROOT_PASSWORD: wordpress
          MARIADB_INITDB_SKIP_TZINFO: 1
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
          MYSQL_DATABASE: wordpress_test
    steps:
      - name: Check out source code
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2

      - name: Decide whether to enable coverage
        id: coverage
        run: |
          if [ "${{ matrix.config.coverage }}" = "yes" ]; then
            echo "::set-output name=coverage::pcov"
            echo '::set-output name=ini::pcov.directory=inc, pcov.exclude="~/(vendor|tests|node_modules)/~"'
          else
            echo "::set-output name=coverage::none"
            echo "::set-output name=ini::opcache.enable_cli=1, opcache.jit=tracing, opcache.jit_buffer_size=64M"
          fi

      - name: Set up PHP
        uses: shivammathur/setup-php@a4e22b60bbb9c1021113f2860347b0759f66fe5d # 2.30.0
        with:
          coverage: ${{ steps.coverage.outputs.coverage }}
          ini-values: ${{ steps.coverage.outputs.ini }}
          php-version: ${{ matrix.config.php }}
        env:
          fail-fast: 'true'

      - name: Install PHPUnit
        run: |
          wget -q -O /usr/local/bin/phpunit "https://phar.phpunit.de/phpunit-9.phar"
          chmod +x /usr/local/bin/phpunit
  
      - name: Install dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0

      - name: Set up WordPress and WordPress Test Library
        uses: sjinks/setup-wordpress-test-library@badbd264eafbfd40b3d1c280b08c83ff1b500334 # 2.0.2
        with:
          version: ${{ matrix.config.wp }}

      - name: Set up multisite mode
        run: echo "WP_MULTISITE=1" >> $GITHUB_ENV
        if: matrix.config.ms == 'yes'

      - name: Update wp-test-config.php
        run: |
          if php -r 'exit(PHP_VERSION_ID < 80100);'; then
            echo "Disabling WP_DEBUG in wp-test-config.php"
            sed -i "s@define( 'WP_DEBUG', true );@// define( 'WP_DEBUG', true );@" /tmp/wordpress-tests-lib/wp-tests-config.php
          fi

      - name: Verify MariaDB connection
        run: |
          while ! mysqladmin ping -h 127.0.0.1 -P ${{ job.services.mysql.ports[3306] }} --silent; do
            sleep 1
          done
        timeout-minutes: 1

      - name: Run tests
        run: |
          OPTIONS=
          if [ "${{ steps.coverage.outputs.coverage }}" != 'none' ]; then
            OPTIONS="$OPTIONS --coverage-clover=clover.xml"
          fi
          phpunit --order-by=random ${OPTIONS}

      - name: Upload coverage report
        uses: codecov/codecov-action@f30e4959ba63075080d4f7f90cacc18d9f3fafd7 # v4.0.0
        with:
          files: clover.xml
          flags: unittests
        if: ${{ steps.coverage.outputs.coverage != 'none' }}
